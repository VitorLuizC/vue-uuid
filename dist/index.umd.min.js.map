{"version":3,"file":"index.umd.min.js","sources":["../index.mjs"],"sourcesContent":["// @ts-check\n\nimport { v1, v3, v4, v5 } from \"uuid\";\n\n/**\n * @typedef {Object} UUID\n * @property {typeof v1} v1\n * @property {typeof v3} v3\n * @property {typeof v4} v4\n * @property {typeof v5} v5\n */\n\n/**\n * An object with uuid's v1, v3, v4 and v5 functions.\n * @type {UUID}\n */\nexport const uuid = { v1, v3, v4, v5 };\n\n/**\n * @typedef {import('vue').App<HostElement>} App\n * @template HostElement\n */\n\n/**\n * Defines '$uuid' property globally, to be accessed in any component instance\n * inside the application. The '$uuid' is an object with uuid's v1, v3, v4 and\n * v5 functions.\n *\n * @example ```js\n * import Vue from 'vue';\n * import withUUID from 'vue-uuid';\n *\n * const app = withUUID(\n *   createApp({\n *     // ...\n *   }),\n * );\n *\n * app.component('c-button', {\n *   created() {\n *     this.id = this.$uuid.v4();\n *   }\n * });\n * ```\n * @param {App<HostElement>} app\n * @returns {App<HostElement>}\n * @template HostElement\n */\nexport default function withUUID(app) {\n  app.config.globalProperties[\"$uuid\"] = uuid;\n  return app;\n}\n"],"names":["uuid","v1","v3","v4","v5","app","config","globalProperties"],"mappings":"qRAgBaA,EAAO,CAAEC,GAAAA,KAAIC,GAAAA,KAAIC,GAAAA,KAAIC,GAAAA,gBAgCnB,SAAkBC,UAC/BA,EAAIC,OAAOC,iBAAX,MAAuCP,EAChCK"}